upstream codex {
  ip_hash;{{#each port}}
  server localhost:{{this}};{{/each}}
}

server {
	listen 80 default_server;
  listen [::]:80 default_server;
  server_name {{domainname}};
  return 301 https://{{domainname}}$request_uri;
}
server {
  listen 443 ssl default_server;
  listen [::]:443 ssl default_server;
  server_name {{domainname}};
  
  ssl_certificate /etc/letsencrypt/live/{{domainname}}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{domainname}}/privkey.pem;
  # ssl cipher configuration from https://cipherli.st/
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
  ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
  ssl_session_cache shared:SSL:10m;
  ssl_stapling on; # Requires nginx >= 1.3.7
  ssl_stapling_verify on; # Requires nginx => 1.3.7
  resolver_timeout 5s;
  add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;

  # from https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html#Forward_Secrecy_&_Diffie_Hellman_Ephemeral_Parameters
  ssl_dhparam /etc/ssl/certs/dhparam.pem;

  root /usr/share/nginx/html;
  index index.html index.htm;
	location / {
		proxy_pass http://codex;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $http_host;
  }
}
